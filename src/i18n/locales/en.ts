export default {
  translation: {
    language: {
      toggle: 'Switch language',
    },
    appName: 'Text Splitter',
    tabs: {
      splitter: 'Text Splitter',
      diff: 'Text Diff',
      filter: 'Text Filter',
      remove: 'Remove Lines',
    },
    regex: {
      useRegex: 'Use Regex Pattern',
      separator: 'Separator:',
      placeholderSimple: 'e.g., _',
      placeholderMulti: 'Use | to separate multiple separators (e.g., _|;)',
      history: {
        title: 'Pattern History',
        noPatterns: 'No saved patterns',
        savePattern: 'Save Pattern',
        usePattern: 'Use this pattern',
        removePattern: 'Remove pattern',
      },
      builder: {
        title: 'Pattern Builder',
        text: 'Text',
        digit: 'Digit',
        word: 'Word',
        space: 'Space',
        custom: 'Custom',
        exactly: 'Exactly',
        optional: 'Optional (?)',
        zeroOrMore: 'Zero or more (*)',
        oneOrMore: 'One or more (+)',
        exactlyN: 'Exactly n times',
        nOrMore: 'n or more times',
        between: 'Between n and m',
        enterValue: 'Enter value...',
        removeBlock: 'Remove block',
        applyPattern: 'Apply Pattern',
        hidePreview: 'Hide preview',
        showPreview: 'Show preview',
        savePattern: 'Save pattern',
      },
      tester: {
        title: 'Regex Pattern Test',
        matchesFound: '{{count}} matches found',
        useCustomText: 'Use custom test text',
        testPattern: 'Test Pattern',
        firstLinePreview: 'First line preview:',
        empty: '(empty)',
        splitResult: 'Split Result:',
      },
    },
    options: {
      title: 'Options',
      separatorOptions: 'Separator Options',
      multipleSeparators: 'Multiple Separators',
      textProcessing: 'Text Processing',
      trimLines: 'Trim Lines',
      trimparts: 'Trim Split Parts',
      displayOptions: 'Display Options',
      showLineNumbers: 'Show Line Numbers',
      keepEmptyLines: 'Keep Empty Lines',
      autoSplit: 'Auto-Split on Paste',
    },
    actions: {
      openFile: 'Open File',
      splitText: 'Split Text',
      save: 'Save',
      undo: 'Undo',
      redo: 'Redo',
      copy: 'Copy',
      copied: 'Copied',
      clear: 'Clear',
    },
    columns: {
      dragToReorder: 'Drag to reorder',
      delete: 'Delete column',
    },
    shortcuts: {
      copy: 'Copy column',
      delete: 'Delete column',
      toggleEdit: 'Toggle edit mode',
      copyHint: 'Ctrl+C',
      deleteHint: 'Del',
      editHint: 'Ctrl+E',
    },
    sourceText: {
      label: 'Source Text:',
      placeholder: 'Paste your text here or open a file...',
      dropHere: 'Drop text file here',
    },
    combine: {
      title: 'Combine Columns',
      separator: 'Separator:',
      appendColumn: 'Append Column:',
      column: 'Part {{number}}',
      result: 'Combined Result:',
    },
    notifications: {
      copied: 'Copied to clipboard!',
      saved: 'File saved successfully!',
      fileTooLarge: 'File is too large. Maximum size is 10MB.',
      readError: 'Error reading file',
      saveError: 'Failed to save file',
      copyError: 'Failed to copy to clipboard',
      invalidRegex: 'Invalid regex pattern',
      processingError: 'Error processing text',
    },
    errors: {
      textAndPatternRequired: 'Text and pattern are required',
      processingTimeout: 'Processing timed out',
      processingAborted: 'Processing was aborted',
      processingGeneral: 'Error during processing',
      invalidPattern: 'Invalid pattern',
      invalidRegex: 'Invalid regex pattern',
      fileTooLarge: 'File is too large. Maximum size is 10MB.',
      readError: 'Error reading file',
      saveError: 'Failed to save file',
      copyError: 'Failed to copy to clipboard',
      processingError: 'Error processing text',
    },
    textDiff: {
      options: {
        trimWhitespace: 'Trim whitespace',
      },
      oldText: 'Original Text:',
      newText: 'New Text:',
      result: 'Result:',
      process: 'Compare Lines',
      oldTextPlaceholder: 'Paste your original text here or open a file...',
      newTextPlaceholder: 'Paste your new text here or open a file...',
    },
    removeLines: {
      modes: {
        duplicates: 'Duplicates',
        containing: 'Containing',
        notContaining: 'Not Containing',
      },
      options: {
        trim: 'Trim whitespace',
        caseSensitive: 'Case sensitive',
        useRegex: 'Use regex',
      },
      sourceText: 'Source Text:',
      result: 'Result:',
      process: 'Remove Lines',
      sourcePlaceholder: 'Paste your text here or open a file...',
      resultPlaceholder: 'Result will appear here...',
      patternPlaceholder: 'Enter search pattern...',
      enterPattern: 'Please enter a search pattern',
      processed: 'Removed {{removed}} lines',
    },
    textFilter: {
      modes: {
        remove: 'Remove Matches',
        keep: 'Keep Matches',
      },
      options: {
        caseSensitive: 'Case sensitive',
        splitMatches: 'Split matches into separate lines',
      },
      sourceText: 'Source Text:',
      result: 'Result:',
      preview: 'Pattern Preview:',
      process: 'Filter Text',
      sourcePlaceholder: 'Paste your text here or open a file...',
      resultPlaceholder: 'Result will appear here...',
      patternPlaceholder: 'Enter regex pattern...',
      enterPattern: 'Please enter a pattern',
      processed: 'Text filtered successfully',
      noMatches: 'No Matches',
      empty: '(empty)',
    },
    processing: {
      status: {
        processing: 'Processing...',
      },
      mode: {
        backend: 'Backend',
        fallback: 'Frontend',
        auto: 'Auto',
        tooltip: 'Processing mode',
      },
      metrics: {
        time: {
          tooltip: 'Processing time',
        },
        memory: {
          tooltip: 'Memory usage',
        },
      },
    },
  },
};
